#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W       &kp E         &kp R           &kp T                                        &kp Y        &kp U  &kp L      &kp O      &kp P
&kp A      &kp S       &kp D         &kp F           &kp G      &mkp MB3         &kp EXCLAMATION  &kp H        &kp J  &kp K      &kp L      &kp SQT
&kp Z      &kp X       &kp C         &kp V           &kp B      &kp TAB          &kp MINUS        &kp N        &kp M  &kp COMMA  &lt 5 DOT  &kp SLASH
&kp LCTRL  &lt 6 LWIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE  &lt 3 LANG2      &lt 2 LANG1      &lt 1 ENTER                               &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&trans         &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans                                     &trans  &trans    &kp UP_ARROW  &trans     &kp BACKSPACE
&kp KP_DIVIDE  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MULTIPLY  &trans            &trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&kp KP_MINUS   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &kp KP_EQUAL      &trans  &trans  &trans    &trans        &trans     &trans
&trans         &kp KP_NUMBER_0  &kp PERIOD       &trans           &trans           &trans            &trans  &trans                                     &trans
            >;
        };

        NUM {
            bindings = <
&kp F10  &kp F11  &kp F12  &kp LEFT_BRACE        &kp RIGHT_BRACE                                     &trans         &trans       &trans          &trans           &trans
&kp F7   &kp F8   &kp F9   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans      &kp EXCLAMATION  &kp AMPERSAND  &kp AT_SIGN  &kp HASH        &kp DOLLAR       &kp PERCENT
&kp F4   &kp F5   &kp F6   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans      &kp UNDERSCORE   &kp CARET      &kp TILDE    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp BACKSLASH
&kp F1   &kp F2   &kp F3   &trans                &trans                 &trans      &trans           &trans                                                       &kp PIPE
            >;
        };

        a {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &mkp MB3  &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
